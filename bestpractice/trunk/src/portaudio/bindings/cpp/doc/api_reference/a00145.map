digraph G {
	node [label="\N", fontname=FreeSans, fontsize=10, shape=record];
	edge [fontname=FreeSans, fontsize=10, labelfontname=FreeSans, labelfontsize=10];
	graph [bb="0,0,434,574"];
	Node1 [label="{portaudio::FunCallbackStream\n|- adapterData_\l|+ FunCallbackStream()\l+ FunCallbackStream()\l+ ~FunCallbackStream()\l+ open()\\
l- FunCallbackStream()\l- operator=()\l- open()\l}", height="1.67", width="2.19", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="244,68", rects="165,112,323,128 165,96,323,112 165,8,323,96"];
	Node2 [label="{portaudio::CallbackStream\n||+ cpuLoad()\l# CallbackStream()\l# ~CallbackStream()\l- CallbackStream()\l- operator=()\l}", height="1.33", width="1.92", color=black, fillcolor=white, style=filled, URL="$a00005.html", tooltip="Base class for all Streams which use a callback-based mechanism.", pos="79,228", rects="10,260,148,276 10,244,148,260 10,180,148,244"];
	Node3 [label="{portaudio::Stream\n|# stream_\l|+ ~Stream()\l+ close()\l+ isOpen()\l+ setStreamFinishedCallback()\l+ start()\l+ stop()\l+ abort\
()\l+ isStopped()\l+ isActive()\l+ inputLatency()\l+ outputLatency()\l+ sampleRate()\l+ time()\l+ paStream()\l+ paStream()\l# St\
ream()\l- Stream()\l- operator=()\l}", height="3.50", width="2.19", color=black, fillcolor=white, style=filled, URL="$a00020.html", tooltip="A Stream represents an active or inactive input and/or output data stream in the...", pos="79,440", rects="0,550,159,566 0,534,159,550 0,314,159,534"];
	Node4 [label="{portaudio::FunCallbackStream::CppToCCallbackData\n|+ funPtr\l+ userData\l|+ CppToCCallbackData()\l+ CppToCCallbackData()\l+ ini\
t()\l}", height="1.17", width="3.72", color=black, fillcolor=white, style=filled, URL="$a00007.html", tooltip="Simple structure containing a function pointer to the C++ callback function and a...", pos="300,228", rects="166,254,435,270 166,226,435,254 166,186,435,226"];
	Node2 -> Node1 [dir=back, color=midnightblue, style=solid, arrowtail=empty, pos="s,129,180 136,173 151,159 166,143 182,128"];
	Node3 -> Node2 [dir=back, color=midnightblue, style=solid, arrowtail=empty, pos="s,79,314 79,304 79,294 79,285 79,276"];
	Node4 -> Node1 [dir=back, color=darkorchid3, style=dashed, arrowtail=open, label=adapterData_, pos="s,285,186 285,186 279,168 272,147 265,128", lp="314,154"];
}
